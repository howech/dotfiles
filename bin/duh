#!/usr/bin/env perl
use strict; use warnings;
use Number::Bytes::Human qw{ format_bytes };

# must make a symlink, either
#  ln -s /usr/bin/du ~/slice/bin/du.orig
#  ln -s /sw/bin/du ~/slice/bin/du.orig

if (grep /^-o/, @ARGV) {
    my @du_args = grep((!/^-o/), @ARGV);
    @du_args = map { s/'/'"'"'/g; $_ } @du_args;
    my $ducmd = '/home/flip/slice/bin/du.orig '.(@du_args ? "'".(join "' '", @du_args)."'": '');
    # print "$ducmd\n";
    my $du = `$ducmd`;

    
    for my $line (split "\n", $du) {
	if ((my ($amt, $wsp, $file)) = ($line =~ m/^(\d+)(\s+)(.*)$/)) {
	    printf "%15s\t%7s\t%s\n", $amt, format_bytes(1024*$amt), $file;
	}
    }
} else {
    system('/home/flip/slice/bin/du.orig', @ARGV);
}



#use List::Util qw{ reduce };
# # Get all options
# my $i = -1; reduce { ($a || $i++); $a ? $a : ($b =~ m/^(?:[^\-]|--)/) ? $b : 0 } 0, @ARGV; $i--;
# my @option_args   = ($i >= 0) ? @ARGV[0..$i] : ();
# printf "%s\n", join " ", @option_args;
# if (grep /^(?:--help|-B|--block-size
